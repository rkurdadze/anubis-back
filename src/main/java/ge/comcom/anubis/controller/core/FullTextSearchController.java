package ge.comcom.anubis.controller.core;

import ge.comcom.anubis.service.core.FullTextSearchService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Set;

@RestController
@RequestMapping("/api/search")
@RequiredArgsConstructor
@Slf4j
public class FullTextSearchController {

    private final FullTextSearchService searchService;

    /**
     * –ü–æ–∏—Å–∫ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É (OCR + —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã).
     *
     * –ü—Ä–∏–º–µ—Ä:
     *   GET /api/search?q=–¥–æ–≥–æ–≤–æ—Ä
     */
    @GetMapping
    public ResponseEntity<Set<Long>> search(@RequestParam("q") String query) {
        log.info("üîç Search request: '{}'", query);
        Set<Long> results = searchService.findMatchingVersionIds(query);
        return ResponseEntity.ok(results);
    }

    /**
     * –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ).
     *
     * –ü—Ä–∏–º–µ—Ä:
     *   POST /api/search/reindex
     */
    @PostMapping("/reindex")
    public ResponseEntity<String> reindexAll() {
        log.info("‚ôªÔ∏è Starting full reindex...");
        searchService.reindexAll();
        return ResponseEntity.accepted().body("Reindexing started");
    }

    /**
     * –ü–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –ø–æ –µ–≥–æ –≤–µ—Ä—Å–∏–∏.
     *
     * –ü—Ä–∏–º–µ—Ä:
     *   POST /api/search/reindex/42
     */
    @PostMapping("/reindex/{versionId}")
    public ResponseEntity<String> reindexSingle(@PathVariable Long versionId) {
        log.info("‚ôªÔ∏è Reindexing version {}", versionId);
        searchService.reindexSingle(versionId);
        return ResponseEntity.accepted()
                .body("Reindex for version " + versionId + " started");
    }
}